import pandas as pd  
import matplotlib.pyplot as plt  
from sklearn.cluster import KMeans  
data = pd.read_csv(’sales_data_sample.csv’, sep = ’,’, encoding = ’Latin-1’)  
data  
selected_features = data[[’QUANTITYORDERED’, ’PRICEEACH’]]  
selected_features  
from sklearn.preprocessing import StandardScaler  
scaler = StandardScaler()  
normalized_features = scaler.fit_transform(selected_features)  
from sklearn.preprocessing import StandardScaler  
scaler = StandardScaler()  
normalized_features = scaler.fit_transform(selected_features)  
wcss = []  # Within-cluster sum of squares  
for i in range(1, 11):  
kmeans = KMeans(n_clusters=i, init=’k-means++’, max_iter=300, n_init=10, random_state=0)  
kmeans.fit(normalized_features)  
wcss.append(kmeans.inertia_)  
# Plot the elbow graph  
plt.plot(range(1, 11), wcss)  
plt.title(’Elbow Method’)  
plt.xlabel(’Number of clusters’)  
plt.ylabel(’WCSS’)  
plt.show()  
optimal_clusters = 3  # Adjust based on the elbow point in the graph  
kmeans = KMeans(n_clusters=optimal_clusters, init=’k-means++’, max_iter=300, n_init=10, 
random_state=0)  
cluster_labels = kmeans.fit_predict(normalized_features)  
plt.scatter(normalized_features[:, 0], normalized_features[:, 1], c=cluster_labels, cmap=’viridis’)  
plt.xlabel(’QUANTITYORDERED’)  
plt.ylabel(’PRICEEACH’)  
plt.title(’K-Means Clustering’)  
plt.show()  
